{"version":3,"sources":["useFetchTasks.js","App.js","index.js"],"names":["useFetchTasks","url","config","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","tasks","setTasks","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","res","json","data","Array","isArray","catch","err","console","log","finally","App","_useFetchTasks","react_default","a","createElement","className","map","task","taskIndex","key","title","JSON","stringify","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"kJAuBeA,EArBO,SAACC,GAAmB,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOG,EACdC,mBAAS,IADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjCK,EADiCH,EAAA,GAC1BI,EAD0BJ,EAAA,GAAAK,EAENN,oBAAS,GAFHO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEjCE,EAFiCD,EAAA,GAEtBE,EAFsBF,EAAA,GAAAG,EAGdV,mBAAS,MAHKW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGjCE,EAHiCD,EAAA,GAG1BE,EAH0BF,EAAA,GAkBxC,OAbAG,oBAAU,WACRL,GAAa,GACbM,MAAMrB,EAAKC,GACVqB,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAUC,MAAMC,QAAQF,GAAOd,EAASc,GAAQ,OACrDG,MAAM,SAACC,GACNV,EAASU,GACTC,QAAQC,IAAIF,KACXG,QAAQ,WACTjB,GAAa,MAEd,IAEI,CAACL,QAAOI,YAAWI,UChBb,SAASe,IAAM,IAAAC,EACMnC,EAAc,8CAAzCW,EADqBwB,EACrBxB,MAAOI,EADcoB,EACdpB,UAAWI,EADGgB,EACHhB,MACzB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZxB,EAAYqB,EAAAC,EAAAC,cAAA,uBAAoB,KAChC3B,EAAM6B,IAAI,SAACC,EAAMC,GAChB,OAAON,EAAAC,EAAAC,cAAA,KAAGK,IAAKD,GAAYD,EAAKG,SAEjCzB,EAAQiB,EAAAC,EAAAC,cAAA,WAAMO,KAAKC,UAAU3B,IAAgB,MCPpD,IAAM4B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPf,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,WAAP,KACEhB,EAAAC,EAAAC,cAACJ,EAAD,OAEFa","file":"static/js/main.8c2e86fe.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetchTasks = (url, config={}) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    fetch(url, config)\r\n    .then((res) => res.json())\r\n    .then((data) => Array.isArray(data)? setTasks(data) : null)\r\n    .catch((err) => {\r\n      setError(err)\r\n      console.log(err)\r\n    }).finally(() => {\r\n      setIsLoading(false);\r\n    });\r\n  }, [])\r\n\r\n  return {tasks, isLoading, error};\r\n}\r\n\r\nexport default useFetchTasks;","import React from \"react\";\nimport \"./styles.css\";\nimport useFetchTasks from \"./useFetchTasks\";\n\nexport default function App() {\n  const {tasks, isLoading, error} = useFetchTasks(\"https://jsonplaceholder.typicode.com/todos\");\n  return (\n    <div className=\"App\">\n      {isLoading ? <p>Loading...</p> : null}\n      {tasks.map((task, taskIndex) => {\n        return <p key={taskIndex}>{task.title}</p>;\n      })}\n      {error ? <pre>{JSON.stringify(error)}</pre> : null}\n      \n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}